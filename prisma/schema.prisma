generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?   // üîê Tambahkan password
  role          Role      @default(USER) // üßë‚Äçüíº Tambahkan role enum
  accounts      Account[]
  sessions      Session[]
}

enum Role {
  USER
  ADMIN
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Campaign {
  id              String   @id @default(uuid())
  title           String
  description     String
  collectedAmount Int      @default(0)
  targetedAmount  Int
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  images          Image[]  // Relasi ke banyak gambar
}

model Image {
  id         String   @id @default(uuid())
  url        String
  campaign   Campaign @relation(fields: [campaignId], references: [id], onDelete: Cascade) // ‚¨ÖÔ∏è penting
  campaignId String
  createdAt  DateTime @default(now())
}


 